// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: proto/auth.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "auth";

export interface GetNewTokensRequest {
  refreshToken: string;
}

export interface ProfileDto {
  id: string;
  email: string;
}

export interface ProfileReguest {
  id: string;
}

export interface AuthDto {
  email: string;
  password: string;
}

export interface AuthResponse {
  id: string;
  email: string;
  tokens: TokensDto | undefined;
}

export interface TokensDto {
  accessToken: string;
  refreshToken: string;
}

export const AUTH_PACKAGE_NAME = "auth";

export interface AuthServiceClient {
  login(request: AuthDto): Observable<AuthResponse>;

  register(request: AuthDto): Observable<AuthResponse>;

  profile(request: ProfileReguest): Observable<ProfileDto>;

  getNewTokens(request: GetNewTokensRequest): Observable<AuthResponse>;
}

export interface AuthServiceController {
  login(request: AuthDto): Promise<AuthResponse> | Observable<AuthResponse> | AuthResponse;

  register(request: AuthDto): Promise<AuthResponse> | Observable<AuthResponse> | AuthResponse;

  profile(request: ProfileReguest): Promise<ProfileDto> | Observable<ProfileDto> | ProfileDto;

  getNewTokens(request: GetNewTokensRequest): Promise<AuthResponse> | Observable<AuthResponse> | AuthResponse;
}

export function AuthServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["login", "register", "profile", "getNewTokens"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AuthService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AUTH_SERVICE_NAME = "AuthService";
