// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v3.20.3
// source: proto/image.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices'
import { Observable } from 'rxjs'

export const protobufPackage = 'image'

export interface UploadFileRequest {
    metadata?: FileMetadata | undefined
    chunk?: Uint8Array | undefined
}

export interface FileMetadata {
    filename: string
    userId: string
}

export interface UploadFileResponse {
    id: string
    originalName: string
    userId: string
    path: string
    status: string
    createdAt: string
}

export const IMAGE_PACKAGE_NAME = 'image'

export interface ImageProcessServiceClient {
    uploadFile(
        request: Observable<UploadFileRequest>
    ): Observable<UploadFileResponse>
}

export interface ImageProcessServiceController {
    uploadFile(
        request: Observable<UploadFileRequest>
    ):
        | Promise<UploadFileResponse>
        | Observable<UploadFileResponse>
        | UploadFileResponse
}

export function ImageProcessServiceControllerMethods() {
    return function (constructor: Function) {
        const grpcMethods: string[] = []
        for (const method of grpcMethods) {
            const descriptor: any = Reflect.getOwnPropertyDescriptor(
                constructor.prototype,
                method
            )
            GrpcMethod('ImageProcessService', method)(
                constructor.prototype[method],
                method,
                descriptor
            )
        }
        const grpcStreamMethods: string[] = ['uploadFile']
        for (const method of grpcStreamMethods) {
            const descriptor: any = Reflect.getOwnPropertyDescriptor(
                constructor.prototype,
                method
            )
            GrpcStreamMethod('ImageProcessService', method)(
                constructor.prototype[method],
                method,
                descriptor
            )
        }
    }
}

export const IMAGE_PROCESS_SERVICE_NAME = 'ImageProcessService'
